<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zz.delicious.dao.GoodsMapper">
  <resultMap id="BaseResultMap" type="com.zz.delicious.entity.Goods">
    <id column="gid" jdbcType="INTEGER" property="gid" />
    <result column="goodsname" jdbcType="VARCHAR" property="goodsname" />
    <result column="typeid" jdbcType="INTEGER" property="typeid" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="size" jdbcType="VARCHAR" property="size" />
    <result column="goodsaddress" jdbcType="VARCHAR" property="goodsaddress" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="flag" jdbcType="INTEGER" property="flag" />
  </resultMap>

  <sql id="Base_Column_List">
    gid, goodsname, typeid, price, size, goodsaddress, url, flag
  </sql>
  <select id="selectAllByGid"   resultType="com.zz.delicious.vo.GoodsVo">
    select g.goodsname ,g.price,g.size,g.goodsaddress,g.url,gt.typename,gc.catename,g.gid,g.typeid
    from goods g
    INNER JOIN goodstype gt
    ON g.typeid=gt.typeid
    INNER JOIN goodscate gc
    ON gt.cid=gc.cid
    where gid = #{gid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from goods
    where gid = #{gid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zz.delicious.entity.Goods">
    insert into goods (gid, goodsname, typeid, 
      price, size, goodsaddress, 
      url, flag)
    values (#{gid,jdbcType=INTEGER}, #{goodsname,jdbcType=VARCHAR}, #{typeid,jdbcType=INTEGER}, 
      #{price,jdbcType=DOUBLE}, #{size,jdbcType=VARCHAR}, #{goodsaddress,jdbcType=VARCHAR}, 
      #{url,jdbcType=VARCHAR}, #{flag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zz.delicious.entity.Goods">
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="gid != null">
        gid,
      </if>
      <if test="goodsname != null">
        goodsname,
      </if>
      <if test="typeid != null">
        typeid,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="size != null">
        size,
      </if>
      <if test="goodsaddress != null">
        goodsaddress,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="flag != null">
        flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="gid != null">
        #{gid,jdbcType=INTEGER},
      </if>
      <if test="goodsname != null">
        #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="typeid != null">
        #{typeid,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="size != null">
        #{size,jdbcType=VARCHAR},
      </if>
      <if test="goodsaddress != null">
        #{goodsaddress,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zz.delicious.entity.Goods">
    update goods
    <set>
      <if test="goodsname != null">
        goodsname = #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="typeid != null">
        typeid = #{typeid,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="size != null">
        size = #{size,jdbcType=VARCHAR},
      </if>
      <if test="goodsaddress != null">
        goodsaddress = #{goodsaddress,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=INTEGER},
      </if>
    </set>
    where gid = #{gid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zz.delicious.entity.Goods">
    update goods
    set goodsname = #{goodsname,jdbcType=VARCHAR},
      typeid = #{typeid,jdbcType=INTEGER},
      price = #{price,jdbcType=DOUBLE},
      size = #{size,jdbcType=VARCHAR},
      goodsaddress = #{goodsaddress,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=INTEGER}
    where gid = #{gid,jdbcType=INTEGER}
  </update>
</mapper>